#include <bits/stdc++.h>
using namespace std;

// Node structure
struct Node {
    int data;
    Node* next;
    Node(int val) {
        data = val;
        next = NULL;
    }
};

// Function to convert array to linked list
Node* arrayToLinkedList(int arr[], int n) {
    if (n == 0) return NULL;
    Node* head = new Node(arr[0]);
    Node* current = head;
    for (int i = 1; i < n; i++) {
        current->next = new Node(arr[i]);
        current = current->next;
    }
    return head;
}

// Function to delete head node
Node* deleteHead(Node* head) {
    if (head == NULL) return NULL; // empty list
    Node* temp = head;             // store old head
    head = head->next;             // move head to next node
    delete temp;                   // free memory of old head
    return head;
}

// Function to print the list
void printList(Node* head) {
    Node* temp = head;
    while (temp != NULL) {
        cout << temp->data << " ";
        temp = temp->next;
    }
    cout << endl;
}

int main() {
    int arr[] = {10, 20, 30, 40, 50};
    int n = sizeof(arr)/sizeof(arr[0]);

    Node* head = arrayToLinkedList(arr, n);

    cout << "Original List: ";
    printList(head);

    head = deleteHead(head); // deleting head

    cout << "After Deletion at Head: ";
    printList(head);

    return 0;
}
