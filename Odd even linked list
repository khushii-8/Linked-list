#include <bits/stdc++.h>
using namespace std;

struct Node {
    int data;
    Node* next;
    Node(int val) {
        data = val;
        next = NULL;
    }
};

Node* oddEvenList(Node* head) {
    if (!head || !head->next) return head;

    Node* odd = head;           // odd pointer
    Node* even = head->next;    // even pointer
    Node* evenHead = even;      // to connect later

    while (even && even->next) {
        odd->next = even->next;
        odd = odd->next;

        even->next = odd->next;
        even = even->next;
    }

    odd->next = evenHead; // join odd list with even list
    return head;
}

// Print function
void printList(Node* head) {
    while (head != NULL) {
        cout << head->data << " ";
        head = head->next;
    }
    cout << endl;
}

int main() {
    // Example: 1->2->3->4->5
    Node* head = new Node(1);
    head->next = new Node(2);
    head->next->next = new Node(3);
    head->next->next->next = new Node(4);
    head->next->next->next->next = new Node(5);

    cout << "Original list: ";
    printList(head);

    head = oddEvenList(head);

    cout << "Odd-Even rearranged list: ";
    printList(head);

    return 0;
}
