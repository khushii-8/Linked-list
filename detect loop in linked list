#include <iostream>
using namespace std;

struct Node {
    int data;
    Node* next;
    Node(int val) {
        data = val;
        next = nullptr;
    }
};

// Function to detect loop in linked list
bool detectLoop(Node* head) {
    Node* slow = head;
    Node* fast = head;

    while (fast && fast->next) {
        slow = slow->next;           // move 1 step
        fast = fast->next->next;     // move 2 steps

        if (slow == fast) {          // if both meet, loop exists
            return true;
        }
    }
    return false; // No loop
}

int main() {
    // Create nodes
    Node* head = new Node(1);
    head->next = new Node(2);
    head->next->next = new Node(3);
    head->next->next->next = new Node(4);
    head->next->next->next->next = new Node(5);

    // Create a loop: 5 -> 2
    head->next->next->next->next->next = head->next;

    if (detectLoop(head))
        cout << "Loop detected!" << endl;
    else
        cout << "No loop detected." << endl;

    return 0;
}
